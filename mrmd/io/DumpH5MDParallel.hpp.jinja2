#pragma once

#include <mpi.h>

#include <memory>
#include <string>

#include "data/Atoms.hpp"
#include "data/MPIInfo.hpp"
#include "data/Subdomain.hpp"

namespace mrmd::io
{
class DumpH5MDParallel
{
public:
    DumpH5MDParallel(const std::shared_ptr<data::MPIInfo>& mpiInfoArg,
                     const std::string& authorArg,
                     const std::string& particleGroupNameArg = "atoms")
        : mpiInfo(mpiInfoArg),
          author(authorArg),
          particleGroupName(particleGroupNameArg)
    {
    }

    void dump(const std::string& filename, const data::Subdomain& subdomain, const data::Atoms& atoms);

    {% for prop in particle %}
    bool dump{{prop.name | cap_first}} = {{prop.default}};   
    {%- endfor %}

    {% for prop in particle %}
    std::string {{prop.name}}Dataset = "{{prop.dataset}}";
    {%- endfor %}

    std::shared_ptr<data::MPIInfo> mpiInfo;

    std::string author = "xxx";
    std::string particleGroupName = "atoms";
};

}  // namespace mrmd::io
